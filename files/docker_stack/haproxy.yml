services:

  haproxy:
    image: haproxy:2.9.4
    container_name: haproxy_stack_haproxy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
    volumes:
      - haproxy_cfg_data:/usr/local/etc/haproxy:ro
      - haproxy_certs_data:/usr/local/etc/certs:ro
    networks:
      - haproxy_stack_net
    ports:
      - ${HAPROXY_HTTP_PORT}:80
      - ${HAPROXY_HTTPS_PORT}:443
      - ${HAPROXY_STATS_PORT}:8404


  certbot:
    image: certbot/certbot
    container_name: haproxy_stack_certbot
    restart: no
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
    entrypoint: "/bin/sh /opt/certbot/manage_cert.sh"
    tty: true
    environment:
      DOMAIN: ${CERTBOT_DOMAIN}
      EMAIL: ${CERTBOT_EMAIL}
      OPTIONS: ${CERTBOT_OPTIONS}
    volumes:
      - ${CERTBOT_MANAGE_SCRIPT_PATH}:/opt/certbot/manage_cert.sh
      - certbot_letsencrypt:/etc/letsencrypt
      - haproxy_certs_data:/usr/local/etc/certs
      - certbot_webroot_data:/webroot
    networks:
      - haproxy_stack_net
    depends_on:
      - nginx_certbot


  nginx_certbot:
    image: nginx
    container_name: haproxy_stack_nginx_certbot
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
    volumes:
      - certbot_webroot_data:/usr/share/nginx/html
    networks:
      - haproxy_stack_net


networks:
  haproxy_stack_net:
    name: haproxy_stack_net
    driver: bridge
    attachable: true
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.driver.mtu: "1500"
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}



volumes:
  haproxy_cfg_data:
    name: haproxy_stack_volume_haproxy_cfg
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${HAPROXY_CFG_VOLUME_PATH}
  haproxy_certs_data:
    name: haproxy_stack_volume_haproxy_certs
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${HAPROXY_CERTS_VOLUME_PATH}
  certbot_letsencrypt:
    name: haproxy_stack_volume_certbot_letsencrypt
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${CERTBOT_LETSENCRYPT_VOLUME_PATH}
  certbot_webroot_data:
    name: haproxy_stack_volume_certbot_webroot
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${CERTBOT_WEBROOT_VOLUME_PATH}
